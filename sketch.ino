#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT11.h>
#include <WiFi.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

#define BUZZER 5
#define LED_1 2
#define LED_2 15
#define PB_CANCEL 34
#define PB_OK 32
#define PB_UP 33
#define PB_DOWN 35
#define DHTPIN 4

#define NTP_SERVER     "pool.ntp.org"
// #define UTC_OFFSET     19800
#define UTC_OFFSET_DST 0

// Declare Objects
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
DHT11 dhtSensor(4);

// global variables
int UTC_OFFSET = 19800;
int days = 0;
int hours = 0;
int minutes = 0;
int seconds = 0;

unsigned long timeNow = 0;
unsigned long timeLast = 0;

bool alarm_enabled = false;
int n_alarms = 3;
int alarm_hours[] = {0, 0, 0};
int alarm_minutes[] = {0, 0, 0};
bool alarm_triggered[] = {false, false, false};

int n_notes = 8;
int C = 262;
int D = 294;
int E = 330;
int F = 349;
int G = 392;
int A = 440;
int B = 494;
int C_H = 523;
int notes[] = {C, D, E, F, G, A, B, C_H};

int current_mode = 0;
int max_modes = 5;
String modes[] = {"1 - Set Time", "2 - Set Alarm 1", "3 - Set Alarm 2", "4 - Set Alarm 3", "5 - Disable Alarm"};

int temperature = 0;
int humidity = 0;

const unsigned char high_temp[] PROGMEM = {
    // 'Screenshot 2024-03-02 121602, 128x63px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb8, 0x67, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb3, 0x27, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb7, 0xe7, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xb7, 0xe0, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xe1, 0xdc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb6, 0x27, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xc3, 0x9c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb3, 0x27, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xc3, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xb0, 0x27, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xc6, 0x10, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xbc, 0x7f, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xce, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xec, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xec, 0x00, 0x03, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x00, 0x03, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x00, 0x03, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x00, 0x03, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x00, 0x03, 0x01, 0xff, 0x02, 0x09, 0xe4, 0x08, 0x00, 0xf3, 0x80, 0x74, 0x08, 0x3f,
    0xff, 0xb8, 0x00, 0x00, 0x01, 0xff, 0xce, 0x78, 0xe4, 0xc9, 0xe6, 0x71, 0xee, 0x74, 0xc9, 0xff,
    0xff, 0xbc, 0x00, 0x00, 0x00, 0xff, 0xce, 0x78, 0xc4, 0xe9, 0xe6, 0x65, 0xee, 0x74, 0xe9, 0xff,
    0xff, 0x1c, 0x00, 0x00, 0x00, 0xff, 0xce, 0x08, 0x44, 0x08, 0x20, 0x65, 0xee, 0x74, 0x08, 0x3f,
    0xff, 0x1c, 0x01, 0x00, 0x00, 0x7f, 0xce, 0x79, 0x54, 0x19, 0xe0, 0xe4, 0xee, 0x74, 0x19, 0xff,
    0xff, 0x0c, 0x01, 0x00, 0x00, 0x7f, 0xce, 0x79, 0x34, 0xf9, 0xe6, 0xc0, 0xee, 0x74, 0xc9, 0xff,
    0xfe, 0x06, 0x03, 0x80, 0x00, 0x7f, 0xce, 0x09, 0x34, 0xf8, 0x06, 0x4e, 0x6f, 0x04, 0xc8, 0x3f,
    0xfe, 0x02, 0x03, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff,
    0xfe, 0x00, 0x03, 0xc0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x07, 0xc2, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x07, 0xc3, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x0f, 0xc3, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x1f, 0xc7, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x1f, 0xc7, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x3f, 0x8f, 0xc0, 0x3f, 0xff, 0xff, 0xfe, 0xf8, 0x0e, 0x40, 0x7f, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x3f, 0x9f, 0xc0, 0x7f, 0xff, 0xff, 0xfe, 0xfb, 0xcc, 0xde, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x7f, 0x9f, 0xc0, 0x7f, 0xff, 0xff, 0xfe, 0xfb, 0xec, 0xde, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0x00, 0x7f, 0xbf, 0xc0, 0x7f, 0xff, 0xff, 0xfe, 0xf8, 0x65, 0xc2, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0x80, 0x7f, 0xbf, 0x80, 0xff, 0xff, 0xff, 0xfe, 0xfb, 0xe5, 0xde, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0x80, 0x7f, 0xbf, 0x80, 0xff, 0xff, 0xff, 0xfe, 0xfb, 0xf1, 0xde, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x7f, 0xbf, 0x81, 0xff, 0xff, 0xff, 0xfe, 0x18, 0x33, 0xc2, 0x0f, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x7f, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0x3f, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x3f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x1f, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x8f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char low_temp[] PROGMEM = {
    // 'Screenshot 2024-03-02 121941, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x84, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x78, 0x00, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x3c, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x78, 0x4d, 0xbf, 0xff, 0xff, 0xff,
    0xff, 0xcc, 0x3e, 0x01, 0xf0, 0xcf, 0xff, 0xff, 0xff, 0xfe, 0x73, 0x69, 0xbf, 0xff, 0xff, 0xff,
    0xff, 0x84, 0x3f, 0x03, 0xf0, 0x87, 0xff, 0xff, 0xff, 0xfe, 0x77, 0x28, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0x80, 0x3f, 0x87, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x77, 0x22, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x3f, 0x87, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x77, 0x22, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x3f, 0x87, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x08, 0x66, 0x7f, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x3f, 0x87, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xfe, 0x0c, 0xf7, 0x7f, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x3f, 0x87, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x1f, 0x87, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x0f, 0x87, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x07, 0x87, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x83, 0x87, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf8, 0xff, 0xc1, 0x86, 0x0f, 0xfc, 0x7e, 0x04, 0x27, 0x30, 0xc2, 0x1e, 0xe0, 0xb2, 0x18, 0x3f,
    0xf0, 0x7f, 0xe0, 0x84, 0x1f, 0xf8, 0x7f, 0x9d, 0xe3, 0x36, 0x5e, 0xce, 0x7b, 0xb2, 0xcb, 0xff,
    0xf8, 0x3f, 0xf0, 0x00, 0x3f, 0xf0, 0x7f, 0x9d, 0xe3, 0x36, 0x5e, 0xec, 0x7b, 0xb2, 0xeb, 0xff,
    0xf8, 0x1f, 0xf8, 0x00, 0x7f, 0xe0, 0xff, 0x9c, 0x22, 0x30, 0xc2, 0x0d, 0x3b, 0xb2, 0x08, 0x7f,
    0xfe, 0x0f, 0xfc, 0x00, 0xff, 0xc1, 0xff, 0x9d, 0xe0, 0xb7, 0xde, 0x18, 0x3b, 0xb2, 0x1b, 0xff,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x9d, 0xe4, 0xb7, 0xde, 0xd9, 0xbb, 0xb2, 0xcb, 0xff,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x9c, 0x05, 0xb7, 0xc2, 0xeb, 0x9b, 0xc6, 0xe8, 0x3f,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0x1f, 0xfc, 0x00, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf8, 0x3f, 0xf8, 0x00, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf0, 0x7f, 0xf0, 0x00, 0x3f, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf0, 0xff, 0xe0, 0x84, 0x1f, 0xf8, 0x7f, 0xff, 0xff, 0xf7, 0x85, 0xd8, 0x5f, 0xff, 0xff, 0xff,
    0xfb, 0xff, 0xc1, 0x86, 0x0f, 0xfe, 0xff, 0xff, 0xff, 0xf7, 0x85, 0xd0, 0x5f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x83, 0x87, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xbc, 0x93, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x07, 0x87, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x86, 0x90, 0xdf, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x0f, 0x87, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xf7, 0xbe, 0xb3, 0xdf, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x1f, 0x87, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xf7, 0xbe, 0x33, 0xdf, 0xff, 0xff, 0xff,
    0xfe, 0x00, 0x3f, 0x87, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xf0, 0x87, 0x30, 0x43, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x7f, 0x87, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x7f, 0x87, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x7f, 0x87, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x80, 0x7f, 0x07, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc4, 0x7e, 0x03, 0xf0, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7c, 0x01, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x78, 0x00, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x70, 0x00, 0x79, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0x84, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char high_humidity[] PROGMEM = {
    // 'Screenshot 2024-03-02 122144, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x7f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe7, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xcf, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x9f, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x3f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0xff, 0xe7, 0x83, 0xff, 0xff, 0xff, 0xdd, 0xb9, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xdc, 0xb0, 0xdd, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xdc, 0xa6, 0x5d, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x0e, 0x3f, 0xff, 0xff, 0xc0, 0xa7, 0xc1, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x07, 0x3f, 0xff, 0xff, 0xdc, 0xa4, 0x5d, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x9f, 0xff, 0xff, 0xdc, 0xa6, 0x5d, 0xff, 0xff, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x9f, 0xff, 0xff, 0xdc, 0xb0, 0x5d, 0xff, 0xff, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0xe5, 0x93, 0x92, 0x18, 0x05, 0x9f, 0xff,
    0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xe5, 0x93, 0x92, 0xc9, 0x9c, 0xbf, 0xff,
    0xff, 0xcf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfc, 0xfe, 0x05, 0x95, 0x52, 0xe9, 0x9e, 0x3f, 0xff,
    0xff, 0x9f, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xfe, 0x7e, 0x05, 0x95, 0x52, 0xe9, 0x9e, 0x7f, 0xff,
    0xff, 0x9f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x7e, 0xe5, 0x94, 0x52, 0xe9, 0x9e, 0x7f, 0xff,
    0xff, 0x9f, 0xff, 0xff, 0xcc, 0xff, 0xff, 0xfe, 0x7e, 0xe4, 0x16, 0xd2, 0x19, 0x9e, 0x7f, 0xff,
    0xff, 0x9f, 0xff, 0xff, 0x9e, 0x7f, 0xff, 0xfe, 0x7e, 0xfe, 0x76, 0xdf, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0x9f, 0xff, 0xff, 0x1e, 0x3f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xcf, 0xff, 0xff, 0x3f, 0x3f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xcf, 0xff, 0xfe, 0x7f, 0x9f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe7, 0xff, 0xfe, 0x7f, 0x9f, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xfc, 0xff, 0xcf, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x00, 0x19, 0xff, 0xe6, 0x00, 0x07, 0xff, 0xff, 0x78, 0x5c, 0x05, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x7b, 0xcd, 0x3d, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf3, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0x7b, 0xc9, 0x3d, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf3, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0x78, 0x69, 0x0d, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe7, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7b, 0xeb, 0x3d, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe7, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0x7b, 0xe3, 0x3d, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x08, 0x73, 0x04, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9d, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9c, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x9c, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xcc, 0x7f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xce, 0x3f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xc7, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe7, 0x87, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf3, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf8, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xfc, 0x7f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char low_humidity[] PROGMEM = {
    // 'Screenshot 2024-03-02 124412, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xc7, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x8f, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf8, 0xdf, 0xbf, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf2, 0x49, 0xbf, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfe, 0x1f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0xe7, 0x49, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfc, 0x3f, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0xe7, 0x69, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0xe7, 0x62, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x7f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0xf7, 0x66, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0x10, 0xe6, 0x7f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe1, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe3, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc7, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x87, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x8f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xbf, 0x76, 0xfb, 0x67, 0xb0, 0x5d, 0xff, 0xff,
    0xff, 0xff, 0x1f, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xb9, 0x76, 0x73, 0x65, 0x98, 0xcd, 0xff, 0xff,
    0xff, 0xff, 0x1f, 0x83, 0xf9, 0xff, 0xff, 0xff, 0xb9, 0x76, 0x73, 0x6c, 0x9d, 0xe9, 0xff, 0xff,
    0xff, 0xfe, 0x3f, 0x01, 0xf3, 0xff, 0xff, 0xff, 0x81, 0x76, 0x23, 0x6e, 0x9d, 0xe3, 0xff, 0xff,
    0xff, 0xfe, 0x3f, 0x39, 0xe3, 0xfe, 0x01, 0xff, 0x81, 0x76, 0x23, 0x6e, 0x9d, 0xf3, 0xff, 0xff,
    0xff, 0xfe, 0x3e, 0x39, 0xe7, 0xfe, 0x01, 0xff, 0xb9, 0x76, 0x8b, 0x6c, 0x9d, 0xf7, 0xff, 0xff,
    0xff, 0xfc, 0x7e, 0x38, 0xc7, 0xfe, 0x01, 0xff, 0xb9, 0x86, 0xdb, 0x61, 0x9d, 0xf7, 0xff, 0xff,
    0xff, 0xfc, 0x7e, 0x38, 0x8f, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7e, 0x39, 0x9f, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0xff, 0x11, 0x1f, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0x83, 0x3f, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xc6, 0x7f, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xfc, 0x43, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xfc, 0x81, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x03, 0xd0, 0x5f, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xf9, 0x98, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x09, 0x90, 0x5f, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0xf1, 0x18, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x79, 0x97, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0xf3, 0x18, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x0d, 0xb0, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0xe3, 0x18, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x3c, 0x33, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0xc7, 0x18, 0xfe, 0x01, 0xff, 0xff, 0xcf, 0x7e, 0x37, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x3f, 0xcf, 0x98, 0xfe, 0x01, 0xff, 0xff, 0xc1, 0x0e, 0x70, 0x43, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x1f, 0x9f, 0x81, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x1f, 0x9f, 0xc3, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x87, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc3, 0xff, 0xff, 0xdc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe1, 0xff, 0xff, 0x8e, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x7f, 0xfe, 0x0f, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x0f, 0xf0, 0x3f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char medicine_time[] PROGMEM = {
    // 'Screenshot 2024-03-02 122506, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xfc, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xe7, 0xcf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xdf, 0xf7, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xbf, 0xfb, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x7f, 0xfd, 0xcf, 0xe3, 0xc4, 0x0c, 0x1c, 0xc0, 0xc8, 0xe4, 0x0f, 0xff,
    0xff, 0xff, 0xff, 0xfe, 0xff, 0xfe, 0xef, 0xe1, 0xc4, 0xfd, 0xcc, 0xcc, 0xc8, 0xe4, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xfe, 0xe7, 0xe1, 0x84, 0xfd, 0xcc, 0x9e, 0xc8, 0x64, 0xff, 0xff,
    0xff, 0xf0, 0x0f, 0xf3, 0xff, 0xff, 0xe7, 0xe5, 0x84, 0x0d, 0xec, 0x9f, 0xc8, 0x24, 0x0f, 0xff,
    0xff, 0xc0, 0x0f, 0xf7, 0xff, 0xff, 0xf7, 0xe4, 0xa4, 0x0d, 0xec, 0x9f, 0xc9, 0x24, 0x0f, 0xff,
    0xff, 0x80, 0x0f, 0xef, 0xff, 0xff, 0xf3, 0xe4, 0x24, 0xfd, 0xcc, 0x9e, 0xc9, 0x84, 0xff, 0xff,
    0xff, 0x0e, 0x1f, 0xdf, 0xff, 0xff, 0xf3, 0xe6, 0x64, 0xfd, 0xcc, 0x9c, 0xc9, 0xc4, 0xff, 0xff,
    0xfe, 0x38, 0x1f, 0xbf, 0xff, 0xff, 0xf3, 0xe6, 0x64, 0x0c, 0x1c, 0xc0, 0xc9, 0xc4, 0x0f, 0xff,
    0xfc, 0x60, 0x1f, 0x7f, 0xff, 0xfe, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0xc0, 0x3e, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfd, 0x80, 0x3c, 0xff, 0xff, 0xfd, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf9, 0x00, 0x3a, 0x7f, 0xff, 0xfb, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfb, 0x00, 0x77, 0x1f, 0xff, 0xf7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfa, 0x00, 0x6e, 0x0f, 0xff, 0xef, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0x00, 0x9c, 0x07, 0xff, 0xce, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0x01, 0xb8, 0x03, 0xff, 0x98, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0x07, 0x70, 0x01, 0xff, 0x20, 0x0f, 0xff, 0xfc, 0x04, 0xcf, 0x98, 0x1e, 0x7f, 0xff, 0xff,
    0xf9, 0xfe, 0xe0, 0x01, 0xfe, 0x40, 0x0b, 0xff, 0xff, 0x3c, 0xc7, 0x19, 0xfe, 0x7f, 0xff, 0xff,
    0xf9, 0xfd, 0xc0, 0x00, 0xfd, 0xc0, 0x1b, 0xff, 0xff, 0xbc, 0xc7, 0x19, 0xfe, 0x7f, 0xff, 0xff,
    0xf9, 0xfb, 0x80, 0x00, 0x7b, 0x80, 0x17, 0xff, 0xff, 0xbc, 0xc2, 0x18, 0x3e, 0x7f, 0xff, 0xff,
    0xf9, 0xf7, 0x00, 0x00, 0x37, 0x80, 0x27, 0xff, 0xff, 0xbc, 0xc2, 0x18, 0x3e, 0x7f, 0xff, 0xff,
    0xf9, 0xfe, 0x00, 0x00, 0x0f, 0x00, 0x67, 0xff, 0xff, 0xbc, 0xca, 0x99, 0xfe, 0x7f, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x00, 0x1f, 0x00, 0xcf, 0xff, 0xff, 0xbc, 0xc8, 0x99, 0xff, 0xff, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x00, 0x3f, 0x03, 0x8f, 0xff, 0xff, 0xbc, 0xc8, 0x98, 0x1e, 0x7f, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x00, 0x7e, 0x0e, 0x1f, 0xff, 0xff, 0xbc, 0xcd, 0x98, 0x1e, 0x7f, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x00, 0x7e, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x00, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xf9, 0xec, 0x00, 0x01, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfd, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfc, 0xf7, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0xfb, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0x7c, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x7e, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xbf, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char connect_1[] PROGMEM = {
    // 'Screenshot 2024-03-02 123821, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xf8, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xf0, 0x7c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x78, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x38, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x10, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x03, 0xc0, 0x10, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc0, 0x03, 0x80, 0x18, 0x1f, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x80, 0xff, 0x80, 0x08, 0x0f, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xe6, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0x80, 0x08, 0x0f, 0xfc, 0xec, 0x61, 0xc7, 0x9c, 0x66, 0xc7, 0x8f, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0x80, 0x08, 0x07, 0xfc, 0xf8, 0x20, 0x83, 0x08, 0x26, 0xc3, 0x0f, 0xff,
    0xff, 0xfc, 0x7f, 0xff, 0x00, 0x0c, 0x07, 0xfc, 0xf9, 0xa6, 0x9a, 0x09, 0xe6, 0xda, 0x6f, 0xff,
    0xff, 0xf8, 0xff, 0xff, 0x00, 0x04, 0x03, 0xfc, 0xe9, 0xa6, 0x9a, 0x79, 0xe6, 0xda, 0x6f, 0xff,
    0xff, 0xf1, 0xff, 0xff, 0x20, 0x0c, 0x03, 0xfc, 0x49, 0x26, 0x9b, 0x29, 0x26, 0xda, 0x6f, 0xff,
    0xff, 0xe3, 0xff, 0xff, 0xa0, 0x08, 0x03, 0xfe, 0x1c, 0x66, 0x9b, 0x0c, 0x62, 0xdb, 0x0f, 0xff,
    0xff, 0xe3, 0xff, 0xff, 0x90, 0x08, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff,
    0xff, 0xc7, 0xff, 0xff, 0xcc, 0x10, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff,
    0xff, 0xc7, 0xff, 0xff, 0xe0, 0x30, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xcf, 0xfe, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xcf, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x8f, 0xdf, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0x8f, 0xff, 0xef, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf9, 0xba, 0x41, 0x7f, 0xff, 0xff,
    0xff, 0x8f, 0xee, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xf9, 0xb3, 0xc1, 0xff, 0xff, 0xff,
    0xff, 0x8f, 0xff, 0xdf, 0xfd, 0x80, 0x00, 0xff, 0xff, 0x8c, 0x7d, 0x92, 0x5f, 0x7f, 0xff, 0xff,
    0xff, 0x8f, 0xff, 0xbf, 0x7c, 0x80, 0x00, 0xff, 0xff, 0x98, 0x7d, 0x16, 0x4f, 0x7f, 0xff, 0xff,
    0xff, 0x8f, 0xff, 0xbf, 0xbc, 0xc0, 0x00, 0xff, 0xff, 0x93, 0x3c, 0x06, 0x43, 0x7f, 0xff, 0xff,
    0xff, 0xcf, 0xff, 0x77, 0xbc, 0x40, 0x00, 0xff, 0xff, 0x93, 0x3c, 0x46, 0x5f, 0x7f, 0xff, 0xff,
    0xff, 0xcf, 0xff, 0xf7, 0xbe, 0x60, 0x01, 0xff, 0xff, 0x99, 0x3e, 0x46, 0x5f, 0x7f, 0xff, 0xff,
    0xff, 0xc7, 0xfe, 0xf7, 0xbe, 0x38, 0x01, 0xff, 0xff, 0xcc, 0x7e, 0x6e, 0x5f, 0x7f, 0xff, 0xff,
    0xff, 0xc7, 0xff, 0xff, 0xbf, 0x0e, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe3, 0xff, 0xfc, 0x7f, 0x86, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe3, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf1, 0xff, 0xff, 0xfd, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x81, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char connect_2[] PROGMEM = {
    // 'Screenshot 2024-03-02 123957, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfc, 0x38, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfc, 0xfe, 0x70, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x0f, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xfd, 0xdf, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x0f, 0xf3, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xf7, 0x98, 0x60, 0xc1, 0x87, 0x08, 0x58, 0x30, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xf7, 0xf2, 0x64, 0xc9, 0x32, 0x4c, 0xd9, 0x32, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x3f, 0xf7, 0xe7, 0x2e, 0xd9, 0x32, 0xfc, 0xdb, 0xa6, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x3f, 0xf7, 0xe7, 0x2e, 0xd9, 0x02, 0xfc, 0xdb, 0xa6, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xf3, 0xb7, 0x2e, 0xd9, 0x3e, 0x6c, 0xdb, 0xa6, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x3f, 0xff, 0xf8, 0x30, 0x6e, 0xd9, 0x82, 0x0c, 0x5b, 0xb0, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x0f, 0xfe, 0xfd, 0xff, 0xff, 0xef, 0xbe, 0xff, 0xfe, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xff, 0x30, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0x7f, 0xff,
    0xff, 0xff, 0xf9, 0xc7, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x0f, 0xff, 0xff, 0xbf, 0xfc, 0xcc, 0x90, 0x27, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x1f, 0xff, 0xff, 0x3f, 0xfc, 0xcc, 0xf3, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0x08, 0x7c, 0x8d, 0x93, 0xe7, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0x33, 0x3e, 0x89, 0x93, 0xe7, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x3f, 0xff, 0xff, 0x33, 0x3e, 0xa1, 0x90, 0x27, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x7f, 0xff, 0xff, 0x33, 0x3e, 0x31, 0x93, 0xe7, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0x33, 0x3e, 0x33, 0x93, 0xe7, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0x88, 0x7e, 0x33, 0x93, 0xe7, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x30, 0x0f, 0xff, 0xff, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf9, 0x83, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0x83, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe3, 0x83, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc6, 0x00, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xcc, 0x00, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x88, 0x01, 0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x98, 0x01, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x98, 0x00, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x90, 0x00, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x90, 0x00, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x98, 0x00, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x98, 0x01, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x88, 0x01, 0x23, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xcc, 0x00, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc6, 0x00, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe3, 0x83, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf1, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf8, 0x38, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char connect_3[] PROGMEM = {
    // 'Screenshot 2024-03-02 124104, 128x64px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x83, 0xf8, 0x01, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x00, 0x78, 0x01, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf8, 0x00, 0x38, 0x01, 0xc0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0x00, 0x3e, 0x07, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x00, 0x7f, 0x0f, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x00, 0xff, 0x0f, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x01, 0xf0, 0x00, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x03, 0x80, 0x00, 0x1c, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x06, 0x00, 0x00, 0x06, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x18, 0x07, 0xfc, 0x03, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x30, 0x3f, 0xff, 0x80, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x60, 0xff, 0x9f, 0xe0, 0x60, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0xc1, 0xff, 0x9f, 0xf8, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc3, 0x83, 0xff, 0x9f, 0xfc, 0x18, 0x7f, 0x3f, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff,
    0xff, 0xf7, 0x07, 0xff, 0x9f, 0xfe, 0x1e, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xed, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0x9f, 0xff, 0x0f, 0xfd, 0xcc, 0xf9, 0xe7, 0x3c, 0xcf, 0xe7, 0x3f, 0xff,
    0xff, 0xfe, 0x1f, 0xff, 0x9f, 0xff, 0x87, 0xfd, 0xf8, 0x65, 0x92, 0x58, 0x4d, 0x96, 0x4f, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0x9f, 0xff, 0x87, 0xfd, 0xfb, 0x2c, 0xb2, 0xc3, 0x6d, 0xb2, 0xcf, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0x9f, 0xff, 0xc3, 0xfd, 0xf3, 0x2c, 0xb2, 0x03, 0xed, 0xb2, 0xcf, 0xff,
    0xff, 0xff, 0x7f, 0xff, 0x9f, 0xff, 0xc3, 0xfc, 0xcb, 0x2c, 0xb2, 0xfb, 0x6d, 0xb2, 0xcf, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xe3, 0xfe, 0x18, 0x6c, 0xb2, 0x18, 0x65, 0xb2, 0x0f, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff,
    0xff, 0xfb, 0xff, 0xff, 0x9f, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff,
    0xff, 0xf9, 0xff, 0xff, 0x9f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf1, 0xff, 0xff, 0x9f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xff, 0x0f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0xff, 0xff, 0x0f, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x7f, 0xfe, 0x0f, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xfb, 0xb4, 0xc2, 0x7f, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xfe, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0x9f, 0xfb, 0x36, 0x82, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xfc, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0x18, 0xfb, 0x34, 0x9e, 0xff, 0xff, 0xff,
    0xff, 0xf0, 0xff, 0xf8, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x10, 0x79, 0x24, 0x9e, 0x7f, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xf1, 0xff, 0xff, 0xfd, 0xff, 0xff, 0x97, 0x78, 0x44, 0x82, 0x7f, 0xff, 0xff,
    0xff, 0xf8, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x97, 0x7c, 0xcc, 0x9e, 0x7f, 0xff, 0xff,
    0xff, 0xf8, 0x7f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0x92, 0x7c, 0xcc, 0x9e, 0x7f, 0xff, 0xff,
    0xff, 0xfc, 0x7f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x98, 0xfc, 0xcc, 0x9e, 0x7f, 0xff, 0xff,
    0xff, 0xfc, 0x3f, 0x9f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x0f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0x87, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc1, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x0f, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe1, 0xe0, 0x00, 0x70, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe1, 0xfe, 0x07, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xe3, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xef, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char welcome[] PROGMEM = {
    // 'Screenshot 2024-03-02 125210, 128x63px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0x3f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0x7f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xd9, 0x7f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xd1, 0x7f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 0x61, 0x21, 0x84, 0x02, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x4d, 0x25, 0xb4, 0x9a, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc4, 0x49, 0x27, 0xb4, 0xda, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc4, 0x43, 0x27, 0xb4, 0xda, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x4d, 0x25, 0xb4, 0xda, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0xc1, 0x21, 0x84, 0xda, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xe1, 0x21, 0x86, 0xdb, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xf7, 0xbf, 0xfb, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf3, 0x9f, 0xfb, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe4, 0xff, 0xff, 0xfd, 0xf3, 0x1f, 0xfa, 0x4d, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe6, 0xff, 0xff, 0xfd, 0xf3, 0x1f, 0xfb, 0xcd, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe7, 0x92, 0x63, 0x48, 0xf1, 0x10, 0xc2, 0x4d, 0x84, 0x9f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf3, 0x80, 0x41, 0x08, 0xf0, 0x10, 0xc2, 0x41, 0x86, 0x9f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xf9, 0x93, 0x79, 0x6d, 0xf0, 0x16, 0xda, 0x49, 0xb6, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xfc, 0x93, 0x41, 0x7d, 0xf0, 0x10, 0xda, 0x4d, 0xb6, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe6, 0x93, 0x49, 0x7d, 0xf0, 0x97, 0xda, 0x4c, 0xb6, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe4, 0x93, 0x59, 0x7d, 0xf2, 0x96, 0xd2, 0x4c, 0xb6, 0x3f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe0, 0x93, 0x41, 0x7c, 0xf3, 0x90, 0xc2, 0x41, 0x84, 0x9f, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void set_display(String text, int column, int row, int text_size, bool isDisplay){
    display.setTextSize(text_size);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(column, row);
    display.println(text);

    if (isDisplay){
      display.display();
    }
}

void print_time_now(void){
  display.clearDisplay();
  set_display("~Smart MediBox~", 15, 0, 1, false);
  set_display("Alarm : " + String(alarm_enabled ? "ON" : "OFF"), 0, 35, 1, false);
  set_display(String(hours) + ":" + String(minutes) + ":" + String(seconds), 20, 15, 2, false);
  set_display("Temperature : "+ String(temperature), 0, 45, 1, false);
  set_display("Humidity : "+ String(humidity), 0, 55, 1, true);
}

void update_time(){
  struct tm timeinfo;
  getLocalTime(&timeinfo);
  
  char timeHour[3];
  strftime(timeHour, 3, "%H", &timeinfo);
  hours = atoi(timeHour);

  char timeMinute[3];
  strftime(timeMinute, 3, "%M", &timeinfo);
  minutes = atoi(timeMinute);

  char timeSecond[3];
  strftime(timeSecond, 3, "%S", &timeinfo);
  seconds = atoi(timeSecond);

  char timeDay[3];
  strftime(timeDay, 3, "%d", &timeinfo);
  days = atoi(timeDay);
}

void ring_alarm(){
  display.clearDisplay();
  display.drawBitmap(0, 0, medicine_time, 128, 64, WHITE);
  display.display();
  digitalWrite(LED_1, HIGH);

  bool break_happened = false;

  while(break_happened == false && digitalRead(PB_CANCEL) == HIGH){
    for (int i = 0; i < n_notes; i++){
      if(digitalRead(PB_CANCEL) == LOW){
        delay(200);
        break_happened = true;
        break;
      }
      tone(BUZZER, notes[0]);
      delay(400);
      noTone(BUZZER);
      delay(400);
    }
  }
  digitalWrite(LED_1, LOW);
  display.clearDisplay();
}

void update_time_with_check_alarm(void){
  update_time();
  print_time_now();

  if ( alarm_enabled == true ){
    for (int i = 0; i < n_alarms; i++){
      if ( alarm_triggered[i] == false && alarm_hours[i] == hours && alarm_minutes[i] == minutes ){
        ring_alarm();
        alarm_triggered[i] = true;
      }
    }
  }
}

int wait_for_button_press(){
  while(true){
    if (digitalRead(PB_UP) == LOW){
      button_blink();
      delay(200);
      return PB_UP;
    }
    if (digitalRead(PB_DOWN) == LOW){
      button_blink();
      delay(200);
      return PB_DOWN;
    }
    if (digitalRead(PB_OK) == LOW){
      button_blink();
      delay(200);
      return PB_OK;
    }
    if (digitalRead(PB_CANCEL) == LOW){
      button_blink();
      delay(200);
      return PB_CANCEL;
    }
    update_time();
  }
}

void print_modes(int mode){
  display.clearDisplay();
  set_display("->", 0, mode * 10, 1, false);
  set_display(modes[0], 15, 0, 1, false);
  set_display(modes[1], 15, 10, 1, false);
  set_display(modes[2], 15, 20, 1, false);
  set_display(modes[3], 15, 30, 1, false);
  set_display(modes[4], 15, 40, 1, true);
}

void go_to_menu(){
  current_mode = 0;
  while (digitalRead(PB_CANCEL) == HIGH){
    print_modes(current_mode);

    int pressed = wait_for_button_press();

    if (pressed == PB_UP){
      delay(200);
      current_mode += 1;
      print_modes(current_mode);
      current_mode = current_mode % max_modes;
    }
    else if (pressed == PB_DOWN){
      delay(200);
      current_mode -= 1;
      print_modes(current_mode);
      if (current_mode < 0){
        current_mode = max_modes - 1;
      }
    }
    else if (pressed == PB_OK){
      delay(200);
      Serial.println(current_mode);
      run_mode(current_mode);
    }
    else if (pressed == PB_CANCEL){
      delay(200);
      break;
    }
  }
}

void run_mode(int mode){
  if (mode == 0){
    set_time();
  }
  if (mode == 1 || mode == 2 || mode == 3){
    set_alarm(mode - 1);
  }
  if (mode == 4){
    alarm_enabled = false;
    display.clearDisplay();
    set_display("Disabled all Alarms !", 0, 0, 1, true);
    delay(500);
  }
}

void set_time(){
  int temp_hour = hours;
  int temp_minutes = minutes;
  int hour_minute = 0;

  while(true){
    display.clearDisplay();
    if(hour_minute == 0){
      set_display("Set Time - hours", 20, 0, 1, false);
      set_display("->", 0, 20, 2, false);
      set_display(String(temp_hour), 30, 20, 2, false);
      set_display(":", 55, 20, 2, false);
      set_display(String(temp_minutes), 70, 20, 2, true);
    }else{
      set_display("Set Time - minutes", 10, 0, 1, false);
      set_display(String(temp_hour), 30, 20, 2, false);
      set_display(":", 55, 20, 2, false);
      set_display(String(temp_minutes), 70, 20, 2, false);
      set_display("<-", 95, 20, 2, true);
    }
    int pressed = wait_for_button_press();

    if (pressed == PB_UP){
      delay(200);
      if(hour_minute == 0){
        temp_hour += 1;
        temp_hour = temp_hour % 24;
      }else{
        temp_minutes += 1;
        temp_minutes = temp_minutes % 60;
      }
    }
    else if (pressed == PB_DOWN){
      delay(200);
      if(hour_minute == 0){
        temp_hour -= 1;
        if (temp_hour < 0){
          temp_hour = 23;
        }
      }else{
        temp_minutes -= 1;
        if (temp_minutes < 0){
          temp_minutes = 59;
        }
      }
    }
    else if (pressed == PB_OK){
      delay(200);
      if(hour_minute == 0){
        UTC_OFFSET += (temp_hour - hours) * 3600;
        hour_minute ++;
      }else{
        UTC_OFFSET += (temp_minutes - minutes) * 60;
        break;
      }
    }
    else if (pressed == PB_CANCEL){
      delay(200);
      display.clearDisplay();
      set_display("Canceled !", 40, 30, 1, true);
      delay(500);
      return;
    }
  }
  Serial.println("UTC OFFSET is " + String(UTC_OFFSET));
  configTime(UTC_OFFSET, UTC_OFFSET_DST, NTP_SERVER);
  display.clearDisplay();
  set_display("Time is set", 20, 30, 1, true);
  delay(500);
}

void set_alarm(int alarm){
  int temp_hour = alarm_hours[alarm];
  int temp_minutes = alarm_minutes[alarm];
  int hour_minute = 0;

  while(true){
    display.clearDisplay();
    set_display("Set Alarm : " + String(alarm + 1), 25, 0, 1, false);
    if(hour_minute == 0){
      set_display("->", 0, 20, 2, false);
      set_display(String(temp_hour), 30, 20, 2, false);
      set_display(":", 55, 20, 2, false);
      set_display(String(temp_minutes), 70, 20, 2, true);
    }else{
      set_display(String(temp_hour), 30, 20, 2, false);
      set_display(":", 55, 20, 2, false);
      set_display(String(temp_minutes), 70, 20, 2, false);
      set_display("<-", 95, 20, 2, true);
    }
    
    int pressed = wait_for_button_press();

    if (pressed == PB_UP){
      delay(200);
      if(hour_minute == 0){
        temp_hour += 1;
        temp_hour = temp_hour % 24;
      }else{
        temp_minutes += 1;
        temp_minutes = temp_minutes % 60;
      }
    }
    else if (pressed == PB_DOWN){
      delay(200);
      if(hour_minute == 0){
        temp_hour -= 1;
        if (temp_hour < 0){
          temp_hour = 23;
        }
      }else{
        temp_minutes -= 1;
        if (temp_minutes < 0){
          temp_minutes = 59;
        }
      }
    }

    else if (pressed == PB_OK){
      delay(200);
      if(hour_minute == 0){
        alarm_hours[alarm] = temp_hour;
        hour_minute ++;
      }else{
        alarm_minutes[alarm] = temp_minutes;
        alarm_enabled = true;
        break;
      }
    }
    else if (pressed == PB_CANCEL){
      delay(200);
      display.clearDisplay();
      set_display("Canceled !", 40, 30, 1, true);
      delay(500);
      return;
    }
  }
  
  display.clearDisplay();
  set_display("Alarm is set", 25, 30, 1, true);
  delay(500);
}

void check_temp(){
  int result = dhtSensor.readTemperatureHumidity(temperature, humidity);

  if (result == 0) {
    Serial.println("Temperature: " + String(temperature));
    Serial.println("Humidity: " + String(humidity) + "% \n");

    if ( temperature > 35 ){
      display.clearDisplay();
      display.drawBitmap(0, 0, high_temp, 128, 64, WHITE);
      display.display();
      warning(2, true);
    }

    else if ( temperature < 22 ){
      display.clearDisplay();
      display.drawBitmap(0, 0, low_temp, 128, 64, WHITE);
      display.display();
      warning(2, true);
    }

    if ( humidity > 90 ){
      display.clearDisplay();
      display.drawBitmap(0, 0, high_humidity, 128, 64, WHITE);
      display.display();
      warning(2, true);
    }

    else if ( humidity < 20 ){
      display.clearDisplay();
      display.drawBitmap(0, 0, low_humidity, 128, 64, WHITE);
      display.display();
      warning(2, true);
    }
  } else {
    Serial.println(DHT11::getErrorString(result));
  }
}

void boot_blink(){
  for(int i = 0; i < 100; i ++){
    if (i % 2 == 0){
      digitalWrite(LED_1, HIGH);
      digitalWrite(LED_2, LOW);
    }else{
      digitalWrite(LED_1, LOW);
      digitalWrite(LED_2, HIGH);
    }
    delay(i);
  }
  digitalWrite(LED_1, LOW);
  digitalWrite(LED_2, HIGH);
}

void warning(int led, bool warning){ // in here warning means temperature or humidity warning
  if(warning){
    if(led == 1){
      digitalWrite(LED_1, HIGH);
      play_buzzer();
      digitalWrite(LED_1, LOW);
    }else{
        digitalWrite(LED_2, HIGH);
        play_buzzer();
        digitalWrite(LED_2, LOW);
    }
  }else{
    if(led == 1){
      for(int i = 0; i < 10; i ++){
        digitalWrite(LED_1, HIGH);
        delay(100);
        digitalWrite(LED_1, LOW);
      }
    }else{
      for(int i = 0; i < 10; i ++){
        digitalWrite(LED_2, HIGH);
        delay(100);
        digitalWrite(LED_2, LOW);
      }
    }
  }
}

void play_buzzer(){
  tone(BUZZER, notes[0]);
  delay(500);
  noTone(BUZZER);
  delay(500);
}

void button_blink(){
  digitalWrite(LED_1, HIGH);
  delay(15);
  digitalWrite(LED_1, LOW);
}

void setup(){
  pinMode(BUZZER, OUTPUT);
  pinMode(LED_1, OUTPUT);
  pinMode(PB_CANCEL, INPUT);
  pinMode(PB_OK, INPUT);
  pinMode(PB_UP, INPUT);
  pinMode(PB_DOWN, INPUT);
  pinMode(LED_2, OUTPUT);

  Serial.begin(9600);

  boot_blink();
  play_buzzer();
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS))
  {
      Serial.println(F("SSD1306 allocation failed"));
      while(true);
  }

  // show the display buffer on the screen. You MUST call display() after drawing commands to make them visible on the display
  display.display();
  delay(500);

  WiFi.begin("Wokwi-GUEST", "", 6);
  while (WiFi.status() != WL_CONNECTED) {
    display.clearDisplay();
    display.drawBitmap(0, 0, connect_1, 128, 64, WHITE);
    display.display();
    delay(1000);
    display.clearDisplay();
    display.drawBitmap(0, 0, connect_2, 128, 64, WHITE);
    display.display();
    delay(1000);
    display.clearDisplay();
    display.drawBitmap(0, 0, connect_3, 128, 64, WHITE);
    display.display();
    delay(1000);
  }

  display.clearDisplay();
  set_display("Connected to WiFi", 10, 25, 1, true);

  configTime(UTC_OFFSET, UTC_OFFSET_DST, NTP_SERVER);

  display.clearDisplay();
  display.drawBitmap(0, 0, welcome, 128, 64, WHITE);
  display.display();
  delay(2000);
  display.clearDisplay();
}

void loop(){
  update_time_with_check_alarm();
  if (digitalRead(PB_OK) == LOW){
    button_blink();
    delay(200);
    go_to_menu();
  }
  check_temp();
}